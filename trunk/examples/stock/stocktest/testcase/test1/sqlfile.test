[default]
calltest: setup
calltest: test1
calltest: test2

[test1]
-- check GET_ITEM_IDS_FOR_DELIVERY recognizes not existing item
-- step 1:
--   insert two indexes, one existing and one not existing
-- verify
--   OUT parameter equals 0
--   one index contains ID, the second contains NULL
calltest: clear
sql: INSERT INTO TEMP_ITEM_CODES_LIST VALUES(%(sessid)s,1,'XXXX',1,2)
sql: INSERT INTO TEMP_ITEM_CODES_LIST VALUES(%(sessid)s,2,'P001',5,11)
sql:
BEGIN
  DECLARE OK INT;
  CALL GET_ITEM_IDS_FOR_DELIVERY(%(sessid)s,OK);
  DELETE FROM RES;
  INSERT INTO RES VALUES(OK, NULL);
END
verify: SELECT * FROM RES
equal OK 0
verify: SELECT * FROM TEMP_ITEM_IDS_LIST WHERE SESSIONID=%(sessid)s ORDER BY SEQNUMBER 
equal SEQNUMBER 1 , isnull ITEMID 
equal SEQNUMBER 2 , isnotnull ITEMID
eof
commit:
[test2]
-- check GET_ITEM_IDS_FOR_DELIVERY recognizing existing items
-- step 1:
--   insert two indexes, both existing
-- verify
--   OUT parameter equals 1
--   both index containing not NULL ID
calltest: clear
sql: INSERT INTO TEMP_ITEM_CODES_LIST VALUES(%(sessid)s,1,'P002',1,2)
sql: INSERT INTO TEMP_ITEM_CODES_LIST VALUES(%(sessid)s,2,'P001',5,11)
sql:
BEGIN
  DECLARE OK INT;
  CALL GET_ITEM_IDS_FOR_DELIVERY(%(sessid)s,OK);
  DELETE FROM RES;
  INSERT INTO RES VALUES(OK, NULL);
END
commit:
verify: SELECT * FROM RES
equal OK 1
verify: SELECT * FROM TEMP_ITEM_IDS_LIST WHERE SESSIONID=%(sessid)s ORDER BY SEQNUMBER 
equal SEQNUMBER 1 , isnotnull ITEMID, equal amount 1, equal amountreserved 1, equal value 2
equal SEQNUMBER 2 , isnotnull ITEMID, equal amount 5, equal amountreserved 5, equal value 11
eof
-- verify that ITEMID is resolved properly for 'P002'
verify: SELECT 1 FROM TEMP_ITEM_IDS_LIST WHERE SEQNUMBER=1 AND SESSIONID=%(sessid)s AND ITEMID=(SELECT ID FROM ITEM WHERE ITEMCODE='P002') 
equal 1 1
eof
