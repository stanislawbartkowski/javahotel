Package description, instruction how to create development environment

= Introduction =

Because of a lot of technologies covered the package structure and deployment is complicated a little bit. 
Below is a short package description and relation matrix between packages and different software deployment units.

<wiki:toc max_depth="3*" />

= Details =



Package list:

|| *Package name* || *Package path* || *Description* || *GAE* || *GAE-TEST* || *HotelEJB* || *HotelEJBTest* || *Hotel-UI* ||
|| gwtclient || com.javahotel.client (view,server) || Client (gwt) sources || X || || || ||X||
|| webhelper || com.javahotel.webhelper	|| Helper for GWT RPC, bridge between RPC and server part ||X|| || || ||X||
||gaenginecache||com.javahotel.commoncache||GAE implementation of cache (TODO: it is temporary solution, needs refactoring)||X||X|| || || || 
||hotellogintypes||com.javahotel.security.login||Classes and interafces for loging in||X||X||X|| ||X||
||hoteltypes||com.javahotel.types||GWT module, interfaces and classes shared by client and server||X||X||X||X||X||
||emptyejb3||javax.ejb||Empty definitions for ejb3 interfaces, used for local (without remote ejb) solution||X||X|| || || ||
||hotelgaenginejpa||com.jabahotel.db||GAE part of JPA implementation||X||X|| || || ||
||hotelinterface||com.javahotel.remoteinterfaces||Onterfaces (facade) for db (DAO) beans||X||X||X||X||X||
||hoteldbres||com.javahotel.dbres||Some common util and resources for db (DAO) beans||X||X||X||X|| ||
||hotelcommon||com.javahotel.common||GWT module, contains TO (Transient Objects) and some common definitions for server and client part||X||X||X||X||X||
||hoteldbutil||com.javahotel.dbutil||Some common util for db (DAO) beans||X||X||X|| || ||
||hoteldbjpa||com.javahotel.dbjpa||Some common classes and packages for JPA handling, also facade for JPA interface||X||X||X|| || ||
||hotellocallogin||com.javahotel.loginhelper||Local implementation for providing remote beans||X||X|| || || ||
||hoteltomcatlogin||com.javahotel.security.tomcat.login||Implementation of admin log-in, user and password taken from xml file||X||X||X|| || ||
||hoteljpa||com.javahotel.db||"Business rules", main DAO (server part) implementation||X||X||X|| || ||
||resources/gwtwar|| ||Some files to copy to eclipse gae war project|| || || || || ||
||resources/gwtwartest|| ||Some files to copy to eclipse gaetest war project|| || || || || ||
||resources/jboss|| || Examples of datasource definition used for testing and running|| || || || || ||
||daotest||com.javahotel.test com.javahotel.statictest||Junit test for dao facade|| ||X|| ||X|| ||
||gaetest||com.javahotel.javatest||GWT wrap-around junit dao test|| ||X|| || || ||
||hotelejb3jpa||com.javahotel.db||EJB3/JPA part of JPA implementation|| || ||X|| || || 
||hotelejb3cache||com.javahotel.commoncache||Simple Java(static)  implementation of cache|| || ||X|| ||X||
||hotelejblogin||com.javahotel.loginhelper||Remote implementation for accesing beans|| || || ||X||X||
||hoteldbdef||com.javahotel.commoncache||Some common definition for db||X||X||X|| ||X||

==Eclipse==

http://code.google.com/intl/pl/eclipse/

==Sources==

Check-out sources: 
http://code.google.com/p/javahotel/source/checkout

Eclipse - create non-java (resource) project and check-out sources there. This project will be used as sources repository and SNV synchronization container.
Directory structure like (below) should be created.

 * javahotel
 * src
  * emptyejb3
  * gaenginecache
  * .....


==Eclipse+GAE==

Purpose: Creating Eclipse project to develop GAE version of JavaHotel application.

Column descriptor: GAE

 * Create new "Web Application" (GAE+GWT) project, make sure that Google SDKs are checked. As 'package name' put something meaningless (com.xxx.xxx).
 * Remove meaningless package (com.xxx.xxx) , 
 * 'war' directory - remove two files (html and css).

 * Link sources using package table above

 * Add to the build path JUnit3 library and two jars from resources/gaewar/modules directory

 * Open "Properties" - "Google" - "Web Toolkit" - remove all modules except "web - com.javahotel"

 * Copy following files from resources/gaewar : WEB-INF/logging.properties ad web.xml and welcomeGWT.html

==Eclipse+GAE-TEST==

Purpose: Creating Eclipse project to run and develop GAE-TEST version of JavaHotel application

Column descriptor: GAE-TEST

 * Create new "Web Application" (GAE+GWT) project, make sure that Google SDKs are checked. As 'package name' put something meaningless (com.xxx.xxx).

 * Remove "meaningles" package (com.xxx.xxx)
 * 'war' directory - remove two files (html and css).

 * Link sources using package table above.

 * Add to the build path Junit4 library.

 * Copy to 'war' directory following files taken from resources/reshotel/gaetest  :  WebHotelTest.css and WebHotelTest.html and WEB-INF/web.xml and WEB-INF/logging.properties

 * Open "Properties" - "Google" - "Web Toolkit" - remove all modules except "WebHotelTest - com.javahotel.javatest"

 * Copy to WEB-INF/lib folder junit.jar file taken from JUnit4 package.

==Eclipse+JBoss==

Purpose: Creating Eclipse project to develop distribute JavaHotel J2EE application for JBoss. You have to create projects for server and client side. Test project is optional. JavaHotel was tested using Postgress database.

=== Eclipse+JBoss+EJB (remote)===

Purpose: Creating project for server component.

Column descriptor: HotelEJB

 * Create new EJB project.

 * Link sources using package table above.

 * Deploy EJB to JBoss server.

 * In the folder resource/jboss in an example of datasource definition used to define  database (Postgress)

===Eclipse+JBoss+EJB-Test===

Purpose: Creating project for testing server component (business rules)

Column descriptor: HotelEJBTest

 * Create standard Java project.

 * Add Junit4 to build path

 * Link sources using package table above.

 * In the folder resource/jboss in an example of datasource definition used to define test database.

===Eclipse+JBoss+Hotel-GUI====

Purpose: Creating eclipse project to run Hotel-UI component (client side)

Column descriptor: Hotel-UI

 * Create project exactly like [#Eclipse+GAE]. The only difference: "Use Google App Engine" check box should be disabled.